---
title: 'Descripción general e inicio rápido'
format: pdf

pdf-engine: lualatex
linkcolor: Sepia
urlcolor: Sepia
editor: visual
lang: es
---

# Descripción de la propuesta

La herramienta `~!gurí_` es un flujo de trabajo y un conjunto de herramientas que facilitan una automatización del proceso de generación de documentos finales para revistas científicas a partir de documentos obtenidos en la etapa de 'corrección de pruebas'. La herramienta se basa en el uso de [Pandoc](https://pandoc.org/) como herramienta de conversión entre formatos, a la cual se incorpora un conjunto de filtros *Lua* y plantillas personalizadas, así como un flujo de trabajo, que permite en su conjunto la creación de los documentos finales. La propuesta parte del hecho de que muchas revistas utilizan como base de sus flujos de trabajos documentos `docx`.

![Esquema general](figures/scheme_gral.png)

La propuesta permite una fuerte adaptación de la apariencia de los formatos finales, a partir de la utilización de plantillas personalizadas.

En términos resumidos, la propuesta propone esquematizar y separar los principales elementos que componen un artículo científico. Para ello, para cada artículo, se debe generar un archivo `docx` (generado mediante una plantilla y con las citas generadas mediante Zotero) y un archivo `yaml` con los metadatos del artículo. Opcionalmente, puede brindarse otros archivos con información de la [taxonomía CRediT](https://credit.niso.org/), elementos flotantes (figuras y tablas) y apéndices. A partir de estos archivos iniciales se genera un archivo intermedio `markdown`, que se utiliza para generar los documentos finales (en formato `pdf`, `html` y `xml`).

# Descripción de las dependencias de software

Esta herramienta se basa en el uso de [Pandoc](https://pandoc.org/) (versión 3.1.10 o superior) como herramienta de conversión entre formatos. Si no tiene instalado este software deberá hacerlo directamente de la página oficial.

También es necesario instalar alguna versión de [R](https://cran.r-project.org/) (recomendable versión 4.3 o superior), que es el encargado de coordinar el proceso de conversiones. Además, es necesario instalar los paquetes `tidyverse`, `rmarkdown`, `readxl`, `tinytex`, `crayon`. Estos paquetes son instalados automáticamente (si no están ya instalados), mediante la función `GURI_install()`.

Es necesario tener instalada alguna distribución de `LaTeX`. A las personas con poca experiencia en el uso de `LaTeX`, recomendamos utilizar la distribución [tinytex](https://yihui.org/tinytex/), por su integración con R y la facilidad para manejar las dependencia de paquetes. Es recomendable tener instalados los siguientes paquetes de `LaTeX` que son utilizados por la pantilla de Pandoc: [`amsfonts`](https://ctan.org/pkg/amsfonts), [`amsmath`](https://ctan.org/pkg/amsmath), [`lm`](https://ctan.org/pkg/lm), [`unicode-math`](https://ctan.org/pkg/unicode-math), [`iftex`](https://ctan.org/pkg/iftex), [`listings`](https://ctan.org/pkg/listings), [`fancyvrb`](https://ctan.org/pkg/fancyvrb), [`longtable`](https://ctan.org/pkg/longtable), [`booktabs`](https://ctan.org/pkg/booktabs), [`graphicx`](https://ctan.org/pkg/graphicx), [`hyperref`](https://ctan.org/pkg/hyperref), [`xcolor`](https://ctan.org/pkg/xcolor), [`soul`](https://ctan.org/pkg/soul), [`geometry`](https://ctan.org/pkg/geometry), [`setspace`](https://ctan.org/pkg/setspace), [`babel`](https://ctan.org/pkg/babel), [`xeCJK`](https://ctan.org/pkg/xecjk), [`fontspec`](https://ctan.org/pkg/fontspec), [`selnolig`](https://ctan.org/pkg/selnolig), [`mathspec`](https://ctan.org/pkg/mathspec), [`biblatex`](https://ctan.org/pkg/biblatex), [`bibtex`](https://ctan.org/pkg/bibtex), [`biber`](https://ctan.org/pkg/biber), [`upquote`](https://ctan.org/pkg/upquote), [`microtype`](https://ctan.org/pkg/microtype), [`csquotes`](https://ctan.org/pkg/csquotes), [`natbib`](https://ctan.org/pkg/natbib), [`bookmark`](https://ctan.org/pkg/bookmark), [`footnotehyper`](https://ctan.org/pkg/footnotehyper), [`footnote`](https://ctan.org/pkg/footnote), [`xurl`](https://ctan.org/pkg/xurl), [`parskip`](https://ctan.org/pkg/parskip) y [svg](https://ctan.org/pkg/svg). A su vez, la adaptación de la plantilla utiliza los siguientes paquetes: [`adjustbox`](https://ctan.org/pkg/adjustbox), [`fontawesome5`](https://ctan.org/pkg/fontawesome5), [`caption`](https://ctan.org/pkg/caption), [`ccicons`](https://ctan.org/pkg/ccicons), [relsize](https://ctan.org/pkg/relsize), [`truncate`](https://ctan.org/pkg/truncate), [`lastpage`](https://ctan.org/pkg/lastpage) y [`koma-script`](https://ctan.org/pkg/koma-script). Si no tiene instalada la distribución `tinytex` y estos paquetes, pueden ser instalados automáticamente con la función `GURI_install(install_tinytex = T)`.

# Inicio rápido

Para realizar una prueba rápida de `~!gurí_` puede utilizar el ejemplo disponible en la carpeta `./example/`.

En primer lugar deberá clonar el repositorio (o descargarlo manualmente).

```         
git clone https://github.com/estedeahora/guri/ 
```

Dentro del directorio de `~!gurí_` debe abrir el proyecto de R mediante el archivo `guri.Rproj`. Si es la primera vez que usa `~!gurí_` es posible que previamente sea conveniente ejecutar manualmente el siguiente código para instalar las librerías de `R` necesarias, así como la distribución de `Tinytex`:

``` r
source("scripts/GURI_00_fx.R", encoding = "UTF-8")
GURI_install()
```

Luego abra el script [`GURI_make-files.R`](script/GURI_make-files.R) ubicado dentro de la carpeta `./scripts/` y ejecute el mismo siguiendo las indicaciones (para una versión de prueba no debería modificar nada). Como resultado, dentro de la carpeta de cada artículo (en la carpeta `./example/num1/`) encontrará un directorio `_output` con los archivos finales resultantes.

<!-- La propuesta surgió como respuesta a la dificultad que encuentran algunas revistas de acceso diamante para generar los documentos finales del proceso de publicación. En particular, la generación de revistasined -->
